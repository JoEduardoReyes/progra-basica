// --- CLASE PARA DEFINIR CADA ATAQUE ---
class Ataque {
	constructor(nombre, id, tipo) {
		this.nombre = nombre;
		this.id = id;
		this.tipo = tipo;
	}
}

// --- CLASE MOKEPON CON TIPO Y LISTA DE ATAQUES ---
class Mokepon {
	constructor(nombre, id, foto, tipo) {
		this.nombre = nombre;
		this.id = id;
		this.foto = foto;
		this.tipo = tipo;
		this.ataques = []; // Este array se llenar치 m치s adelante
		this.x = 20;
		this.y = 30;
		this.ancho = 80;
		this.alto = 80;
		this.mapaFoto = new Image();
		this.mapaFoto.src = foto;
		this.velocidadX = 0;
		this.velocidadY = 0;
	}
}

// --- BASE DE DATOS DE ATAQUES DISPONIBLES ---
const ATAQUES_DISPONIBLES = [
	// Ataques de Fuego
	new Ataque("Lanzallamas 游댠", "lanzallamas", "FUEGO"),
	new Ataque("Ascuas 游댠", "ascuas", "FUEGO"),
	new Ataque("Giro Fuego 游댠", "giro-fuego", "FUEGO"),
	new Ataque("Infierno 游댠", "infierno", "FUEGO"),
	new Ataque("Llamarada 游댠", "llamarada", "FUEGO"),
	// Ataques de Agua
	new Ataque("Pistola Agua 游눦", "pistola-agua", "AGUA"),
	new Ataque("Hidrobomba 游눦", "hidrobomba", "AGUA"),
	new Ataque("Burbuja 游눦", "burbuja", "AGUA"),
	new Ataque("Surf 游눦", "surf", "AGUA"),
	new Ataque("Rayo Burbuja 游눦", "rayo-burbuja", "AGUA"),
	// Ataques de Tierra
	new Ataque("Terremoto 游꺔", "terremoto", "TIERRA"),
	new Ataque("Fisura 游꺔", "fisura", "TIERRA"),
	new Ataque("Avalancha 游꺔", "avalancha", "TIERRA"),
	new Ataque("Bofet칩n Lodo 游꺔", "bofeton-lodo", "TIERRA"),
	new Ataque("Disparo Lodo 游꺔", "disparo-lodo", "TIERRA"),
	// Ataques de Pelea
	new Ataque("Golpe K치rate 游뱊", "golpe-karate", "PELEA"),
	new Ataque("Patada Baja 游뱊", "patada-baja", "PELEA"),
	new Ataque("Doble Patada 游뱊", "doble-patada", "PELEA"),
	new Ataque("Sumisi칩n 游뱊", "sumision", "PELEA"),
	new Ataque("Golpe Cuerpo 游뱊", "golpe-cuerpo", "PELEA"),
	// Ataques de Siniestro
	new Ataque("Mordisco 游놏", "mordisco", "SINIESTRO"),
	new Ataque("Pulso Umbr칤o 游놏", "pulso-umbrio", "SINIESTRO"),
	new Ataque("Finta 游놏", "finta", "SINIESTRO"),
	new Ataque("Triturar 游놏", "triturar", "SINIESTRO"),
	new Ataque("Buena Baza 游놏", "buena-baza", "SINIESTRO"),
	// Ataques Normales
	new Ataque("Placaje 游눩", "placaje", "NORMAL"),
	new Ataque("Ara침azo 游눩", "aranazo", "NORMAL"),
	new Ataque("Golpe Cabeza 游눩", "golpe-cabeza", "NORMAL"),
	new Ataque("Hiperrayo 游눩", "hiperrayo", "NORMAL"),
	new Ataque("Ataque R치pido 游눩", "ataque-rapido", "NORMAL"),
	new Ataque("L치tigo 游눩", "latigo", "NORMAL"),
	new Ataque("Derribo 游눩", "derribo", "NORMAL"),
];

// --- CONSTANTE CON TODOS LOS MOKEPONES DISPONIBLES ---
const MOKEPONES = [
	new Mokepon(
		"Hipodoge 游눦",
		"hipodoge",
		"https://i.ibb.co/fddKdfNd/hipodoge.png",
		"AGUA"
	),
	new Mokepon(
		"Capipepo 游꺔",
		"capipepo",
		"https://i.ibb.co/zhN3F0RD/capipepo.png",
		"TIERRA"
	),
	new Mokepon(
		"Ratigueya 游댠",
		"ratigueya",
		"https://i.ibb.co/Vp3NsXTN/ratigueya.png",
		"FUEGO"
	),
	new Mokepon(
		"Perrocoptero 游뚜",
		"perrocoptero",
		"https://i.ibb.co/v6b4F3bX/perrocoptero.png",
		"NORMAL"
	),
	new Mokepon(
		"Gatosaurio 游붔",
		"gatosaurio",
		"https://i.ibb.co/NngH7Dyn/gatosaurio.png",
		"SINIESTRO"
	),
	new Mokepon(
		"Largarto침o 游붍",
		"largartono",
		"https://i.ibb.co/3KRrZkh/lagartono.png",
		"PELEA"
	),
];

const VENTAJA_DE_TIPO = {
	FUEGO: ["TIERRA", "PELEA"],
	AGUA: ["FUEGO", "SINIESTRO"],
	TIERRA: ["AGUA", "NORMAL"],
	PELEA: ["SINIESTRO", "NORMAL"],
	SINIESTRO: ["FUEGO", "TIERRA"],
	NORMAL: ["AGUA", "PELEA"],
};

// --- FUNCI칍N PARA ASIGNAR ATAQUES A UN MOKEPON ---
function asignarAtaques(mokepon) {
	mokepon.ataques = [];
	const ataquesDeSuTipo = ATAQUES_DISPONIBLES.filter(
		(ataque) => ataque.tipo === mokepon.tipo
	);
	const ataquesDeOtrosTipos = ATAQUES_DISPONIBLES.filter(
		(ataque) => ataque.tipo !== mokepon.tipo
	);
	while (mokepon.ataques.length < 2) {
		const indiceAleatorio = Math.floor(Math.random() * ataquesDeSuTipo.length);
		const ataqueSeleccionado = ataquesDeSuTipo[indiceAleatorio];
		if (!mokepon.ataques.includes(ataqueSeleccionado)) {
			mokepon.ataques.push(ataqueSeleccionado);
		}
	}
	while (mokepon.ataques.length < 4) {
		const indiceAleatorio = Math.floor(
			Math.random() * ataquesDeOtrosTipos.length
		);
		const ataqueSeleccionado = ataquesDeOtrosTipos[indiceAleatorio];
		if (!mokepon.ataques.includes(ataqueSeleccionado)) {
			mokepon.ataques.push(ataqueSeleccionado);
		}
	}
}

// --- NUEVA FUNCI칍N PARA SELECCIONAR UN ENEMIGO ALEATORIO ---
// Esta funci칩n ser치 llamada por canvas.js para obtener un oponente.
function obtenerEnemigoAleatorio(mascotaJugador) {
	// 1. Filtra la lista para no escoger al mismo Mokepon del jugador
	const enemigosPosibles = MOKEPONES.filter(
		(mokepon) => mokepon.id !== mascotaJugador.id
	);

	// 2. Escoge un 칤ndice aleatorio de la lista de posibles enemigos
	const indiceAleatorio = Math.floor(Math.random() * enemigosPosibles.length);
	const enemigoSeleccionado = enemigosPosibles[indiceAleatorio];

	// 3. Asigna una posici칩n aleatoria en el mapa al enemigo
	// (Asumimos un tama침o de mapa de 800x600 por ahora)
	enemigoSeleccionado.x = Math.floor(Math.random() * 720); // 800 (ancho) - 80 (mokepon)
	enemigoSeleccionado.y = Math.floor(Math.random() * 520); // 600 (alto) - 80 (mokepon)

	// 4. Retorna el objeto del enemigo completamente listo para ser dibujado
	return enemigoSeleccionado;
}
